{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyProject\\\\myBlog\\\\myBlog_client\\\\src\\\\components\\\\login.component.js\";\nimport React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../actions/auth\";\nimport '../css/login.css';\nimport { Card, Grid, Button } from \"@material-ui/core\";\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"This field is required!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n};\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n    this.setState({\n      loading: true\n    });\n    this.form.validateAll();\n    const {\n      dispatch,\n      history\n    } = this.props;\n\n    if (this.checkBtn.context._errors.length === 0) {\n      dispatch(login(this.state.username, this.state.password)).then(() => {\n        history.push(\"/profile\");\n        window.location.reload();\n      }).catch(() => {\n        this.setState({\n          loading: false\n        });\n      });\n    } else {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const {\n      isLoggedIn,\n      message\n    } = this.props;\n\n    if (isLoggedIn) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-wrapped\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"login-inner\",\n        style: {\n          boxShadow: \"none\"\n        },\n        elevation: 0,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 6,\n            md: 6,\n            sm: 12,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"login-background p-32\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"./assets/background/dreamer.svg\",\n                alt: \"background-img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 6,\n            md: 6,\n            sm: 12,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"login-form-wrapped p-64\",\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: this.handleLogin,\n                ref: c => {\n                  this.form = c;\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"username\",\n                    children: \"Username\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"text\",\n                    className: \"form-control\",\n                    name: \"username\",\n                    value: this.state.username,\n                    onChange: this.onChangeUsername,\n                    validations: [required]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"password\",\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"password\",\n                    className: \"form-control\",\n                    name: \"password\",\n                    value: this.state.password,\n                    onChange: this.onChangePassword,\n                    validations: [required]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-primary btn-block\",\n                    disabled: this.state.loading,\n                    children: [this.state.loading && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"spinner-border spinner-border-sm\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Login\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 37\n                }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"alert alert-danger\",\n                    role: \"alert\",\n                    children: message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(CheckButton, {\n                  style: {\n                    display: \"none\"\n                  },\n                  ref: c => {\n                    this.checkBtn = c;\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  const {\n    isLoggedIn\n  } = state.auth;\n  const {\n    message\n  } = state.message;\n  return {\n    isLoggedIn,\n    message\n  };\n}\n\nexport default connect(mapStateToProps)(Login);","map":{"version":3,"sources":["D:/MyProject/myBlog/myBlog_client/src/components/login.component.js"],"names":["React","Component","Redirect","Form","Input","CheckButton","connect","login","Card","Grid","Button","TextValidator","ValidatorForm","required","value","Login","constructor","props","handleLogin","bind","onChangeUsername","onChangePassword","state","username","password","loading","e","setState","target","preventDefault","form","validateAll","dispatch","history","checkBtn","context","_errors","length","then","push","window","location","reload","catch","render","isLoggedIn","message","boxShadow","c","display","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\n\r\nimport '../css/login.css';\r\nimport {\r\n    Card,\r\n    Grid,\r\n    Button\r\n} from \"@material-ui/core\";\r\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            loading: false,\r\n        };\r\n    }\r\n\r\n    onChangeUsername(e) {\r\n        this.setState({\r\n            username: e.target.value,\r\n        });\r\n    }\r\n\r\n    onChangePassword(e) {\r\n        this.setState({\r\n            password: e.target.value,\r\n        });\r\n    }\r\n\r\n    handleLogin(e) {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            loading: true,\r\n        });\r\n\r\n        this.form.validateAll();\r\n\r\n        const { dispatch, history } = this.props;\r\n\r\n        if (this.checkBtn.context._errors.length === 0) {\r\n            dispatch(login(this.state.username, this.state.password))\r\n                .then(() => {\r\n                    history.push(\"/profile\");\r\n                    window.location.reload();\r\n                })\r\n                .catch(() => {\r\n                    this.setState({\r\n                        loading: false\r\n                    });\r\n                });\r\n        } else {\r\n            this.setState({\r\n                loading: false,\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { isLoggedIn, message } = this.props;\r\n\r\n        if (isLoggedIn) {\r\n            return <Redirect to=\"/profile\" />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"login-wrapped\">\r\n                <Card className=\"login-inner\" style={{ boxShadow: \"none\" }} elevation={0}>\r\n                    <Grid container>\r\n                        <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                            <div className=\"login-background p-32\">\r\n                                <img src=\"./assets/background/dreamer.svg\" alt=\"background-img\" />\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                            <div className=\"login-form-wrapped p-64\">\r\n                                <Form\r\n                                    onSubmit={this.handleLogin}\r\n                                    ref={(c) => {\r\n                                        this.form = c;\r\n                                    }}\r\n                                >\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"username\">Username</label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"username\"\r\n                                            value={this.state.username}\r\n                                            onChange={this.onChangeUsername}\r\n                                            validations={[required]}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"password\">Password</label>\r\n                                        <Input\r\n                                            type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            name=\"password\"\r\n                                            value={this.state.password}\r\n                                            onChange={this.onChangePassword}\r\n                                            validations={[required]}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <button\r\n                                            className=\"btn btn-primary btn-block\"\r\n                                            disabled={this.state.loading}\r\n                                        >\r\n                                            {this.state.loading && (\r\n                                                <span className=\"spinner-border spinner-border-sm\"></span>\r\n                                            )}\r\n                                            <span>Login</span>\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                    {message && (\r\n                                        <div className=\"form-group\">\r\n                                            <div className=\"alert alert-danger\" role=\"alert\">\r\n                                                {message}\r\n                                            </div>\r\n                                        </div>\r\n                                    )}\r\n                                    <CheckButton\r\n                                        style={{ display: \"none\" }}\r\n                                        ref={(c) => {\r\n                                            this.checkBtn = c;\r\n                                        }}\r\n                                    />\r\n                                </Form>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { isLoggedIn } = state.auth;\r\n    const { message } = state.message;\r\n    return {\r\n        isLoggedIn,\r\n        message\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Login);"]},"metadata":{},"sourceType":"module"}